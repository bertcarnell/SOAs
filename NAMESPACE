import(stats)
import(methods)
importFrom(combinat, "permn")
#importFrom(sfsmisc, "digitsBase")
importFrom(arrangements, "permutations", "npermutations")
importFrom(igraph, "vertex_attr<-", "graph_from_edgelist", "max_bipartite_match")
importFrom(lhs, "create_galois_field")

S3method(print, SOA)
S3method(print, OSOA)
S3method(print, MDLE)
S3method(phi_p, default)
S3method(phi_p, SOA)
S3method(phi_p, OSOA)
S3method(phi_p, MDLE)
S3method(soacheck2D, default)
S3method(soacheck2D, SOA)
S3method(soacheck2D, OSOA)
S3method(soacheck3D, default)
S3method(soacheck3D, SOA)
S3method(soacheck3D, OSOA)
S3method(ocheck, default)
S3method(ocheck, SOA)
S3method(ocheck, OSOA)
S3method(ocheck, MDLE)
S3method(ocheck3, default)
S3method(ocheck3, SOA)
S3method(ocheck3, OSOA)
S3method(ocheck3, MDLE)
S3method(count_npairs, default)
S3method(count_npairs, SOA)
S3method(count_npairs, OSOA)
S3method(count_npairs, MDLE)

import(DoE.base, except=c("lm", "aov", "lm.design", "aov.design", "lm.formula", "aov.formula"))
import(FrF2)
export("OSOAs", "OSOAs_regular", "SOAs", "SOAs2plus_regular", "OSOApb", "SOAs8level", "OSOAs_LiuLiu", "MDLEs",
       "soacheck2D", "soacheck3D", "ocheck", "ocheck3", "phi_p", "count_npairs", "count_nallpairs", "mbound_LiuLiu")
export("createSaturated", "createAB", "OSOAarbitrary", "OSOAregulart", "soa", "BsFromB","BcolsFromBcolllist",
       "DcFromDp","ff","Yatesmat2","interleavecols","levels.no","createF","nchoosek","ncol_lb","NeighbourcalcUniversal",
       "permopt","optimize","XiaoXuMDLE","create_DfromABC","create_ABC", "createABcols", "createYcols")
#exportPattern("Ë†[[:alpha:]]+")

